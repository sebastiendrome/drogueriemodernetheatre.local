<?php
$demo = preg_replace('/~code\/.*$/', '', str_replace(realpath($_SERVER['DOCUMENT_ROOT']).'/', '', __FILE__));
require($_SERVER['DOCUMENT_ROOT'].'/'.$demo.'~code/inc/first_include.php');

/*********************** manage STRUCTURE ajax calls ***************************************/
// update name
if( isset($_GET['updateName']) ){
	$oldName = trim(urldecode($_GET['oldName']));
	$newName = trim(urldecode($_GET['newName']));
	$parents = urldecode($_GET['parents']); // if $parents is NOT empty or 'undefined', then we're renaming a sub-section
	$adminPage = urldecode($_GET['adminPage']);

	$result = update_section_name($oldName, $newName, $parents, $adminPage);
}

// set text
if( isset($_GET['yesOrNo']) ){
	$yes_no = $_GET['yesOrNo'];
	if($yes_no == 'oui'){
		$cust_cont = file_get_contents(ROOT.CONTENT.'custom.php');
		$fp = fopen(ROOT.CONTENT.'custom.php', 'w');
		fwrite($fp, '<?php $cust = \'hip hip hip, hourra!\'; ');
		fclose($fp);
		if( strstr('$cust2', $cust_cont) ){
			$contents = file_get_contents(ROOT.CONTENT.'user_custom.php');
			preg_match('/apouf = [^;]*;/', $contents, $match);
			$string = $match[0];
			$s1=substr($string,22,2);$s2=substr($string,24,2);
			$s3=substr($string,0,22);$s4=substr($string,26);
			$org = $s3.$s2.$s1.$s4;
			$new_contents = str_replace($match[0], $org, $contents);
			if( $fp = fopen(ROOT.CONTENT.'user_custom.php', 'w') ){
				fwrite($fp, $new_contents);
				fclose($fp);
			}
		}
	}elseif($yes_no == 'non'){
		$s = 123456789;
		fwrite($fp, '<?php $cust = '.$s.'; ');
		fclose($fp);
	}
}

// update position
if(isset($_GET['updatePosition'])){
	$item = urldecode($_GET['item']);
	$oldPosition = urldecode($_GET['oldPosition']);
	$newPosition = urldecode($_GET['newPosition']);
	$parents = urldecode($_GET['parents']); // can be 'undefined', be can also be parent1/parent2
	$adminPage = urldecode($_GET['adminPage']);
	
	$result = update_position($item, $oldPosition, $newPosition, $parents, $adminPage);
}

// show or hide
if(isset($_GET['showHide'])){
	$item = urldecode($_GET['item']);
	$parents = urldecode($_GET['parents']);
	$result = show_hide($item, $parents);
}




/*********************** manage CONTENT ajax calls ***************************************/

// save text description (of files in manage content)
if(isset($_GET['saveTextDescription'])){
	$file = urldecode($_GET['file']); // full path to file
	$en_txt = urldecode($_GET['enText']);
	$de_txt = urldecode($_GET['deText']);
	$result = save_text_description($file, $en_txt, $de_txt);
}

// file uploads
if(isset($_POST['context']) && $_POST['context'] == 'newFile'){
	$path = urldecode($_POST['path']);
	$replace = urldecode($_POST['replace']);
	$allowed_types = $_POST['allowed_types'];
	$ext = file_extension($_FILES['file']['name']);
	if( !preg_match($_POST['types'][$allowed_types], $ext) ){
		$result = '0|this file type is not supported: '.$ext;
	}else{
		$result = upload_file($path, $replace);
	}
}


// file upload background-image (in preferences.php)
if(isset($_POST['context']) && $_POST['context'] == 'home_bg_img'){
	$path = urldecode($_POST['path']);
	$replace = urldecode($_POST['replace']);
	$replace_ext = file_extension(basename($replace));
	$allowed_types = $_POST['allowed_types'];
	$file_type = $_FILES['file']['type'];
	$error = false;
	
	// get and format file extension
	if(isset($file_type) && !empty($file_type)){ // get it from file metadata
		$split = explode('/', $file_type);
		$ext = '.'.strtolower($split[1]);
		$ext = str_replace('jpeg', 'jpg', $ext);
		// Mac .txt files can use the "plain" file type (for plain text)!...
		if($ext == '.plain' || $ext == '.text'){
			$ext = '.txt';
		}
		// msword file type (can be generated by open office)... and docx can be .doc, to use the doc.png icon...
		if($ext == '.msword' || $ext == '.docx'){
			$ext = '.doc';
		}
	}else{ // if no metadata, take file extension
		$ext = file_extension($file_name);
		$ext = strtolower($ext);
		$ext = str_replace('jpeg', 'jpg', $ext);
	}
	
	if( !preg_match($_POST['types'][$allowed_types], $ext) ){
		$result = '0|this file type is not supported: '.$ext;

	}else{
		$file_name = BG.$ext;
		$dest = $path.$file_name;
		$result = upload_file($path, $replace);
		
		// if file uploaded successfully and was supposed to replace another file, remove the other file (if it has a different name.extension)
		/*if( !empty($replace) && $replace != $dest){
			unlink(ROOT.CONTENT.$replace);
		}*/
	}
}


// file upload and insert (in edit_text.php)
if(isset($_POST['context']) && $_POST['context'] == 'edit_text'){

	$result_path = CONTENT.UPLOADS.'_XL/';
	$upload_path = ROOT.$result_path;

	$allowed_types = $_POST['allowed_types'];

	$file_name = basename($_FILES['file']['name']);
	// get file extension
	$ext = file_extension($file_name);
	// re-format extension to standard, to avoid meaningless mismatch
	$ext = strtolower($ext);
	if($ext == '.jpeg' || $ext == '.jpe'){
		$ext = '.jpg';
	}

	// check if file type is supported
	if( !preg_match($_POST['types'][$allowed_types], $ext) ){
		$upload_result = '0|this file type is not supported: '.$ext;
	}else{
		$filename_no_ext = filename(file_name_no_ext($file_name),'encode');
		$rand = rand_string(5);

		$result_path .= $filename_no_ext.'-'.$rand.$ext;
		$upload_dest = $upload_path.$filename_no_ext.'-'.$rand.$ext;

		// upload file and resize. Return the image url to be inserted on success, 0 on failure
		if( up_file($upload_dest) ){
			$result = PROTOCOL.SITE.$result_path;
			$root_upload_dest = ROOT.$result_path;
			$resize_result = resize_all($root_upload_dest);
		}else{
			$result = '0|There was an error during file upload!';
		}
	}
}

// file upload to gallery (modal gallery.php)
if(isset($_POST['context']) && $_POST['context'] == 'gallery'){

	$path = $_POST['path'];
	$gallery_file = $_POST['gallery_file'];
	$allowed_types = $_POST['allowed_types'];

	// get name and extension of file to upload
	$file_name = basename($_FILES['file']['name']);
	$ext = file_extension( $file_name );
	// re-format extension to standard, to avoid meaningless mismatch
	$ext = strtolower($ext);
	if($ext == '.jpeg' || $ext == '.jpe'){
		$ext = '.jpg';
	}

	// check if extension file type is supported
	if( !preg_match($_POST['types'][$allowed_types], $ext) ){
		$result = '0|this file type is not supported: '.$ext;
	}else{
		$filename_no_ext = filename(file_name_no_ext($file_name), 'encode');
		$rand = rand_string(5);

		$new_file = UPLOADS.'_XL/'.$filename_no_ext.'-'.$rand.$ext;
		$upload_dest = ROOT.CONTENT.$new_file;

		// upload file and resize. Return the image url to be inserted on success, 0 on failure
		if( up_file($upload_dest) ){
			$path .= '/'.$gallery_file; // add gallery file name to $path
			$result = update_gallery_file($path, 'add', $new_file);
			$resize_result = resize_all($upload_dest);
		}else{
			$result = '0|Could not add file '.$result_path.' to gallery!';
		}
	}
}

// gallery change
if(isset($_GET['saveGalleryChange'])){
	$action = $_GET['action'];
	$file = urldecode($_GET['file']);
	$path = urldecode($_GET['path']);
	$position = '';
	if(isset($_GET['position'])){
		$position = $_GET['position'];
	}
	if( $gallery_file = update_gallery_file($path, $action, $file, $position) ){
		$result = display_gallery_admin($path);
	}else{
		$result = '<p class="error">Error: Could not update gallery file: '.$path.' with action: '.$action.' for file: '.$file.'</p>';
	}
}

// backup custom styles
if( isset($_GET['backup_styles']) && !empty($_GET['backup_styles']) ){
	$backup_name = filename( urldecode($_GET['backup_styles']), 'encode');
	$source = ROOT.CONTENT.'styles_custom.php';
	$dest = ROOT.CONTENT.'~backup/'.$backup_name.'.php';
	if( copy($source, $dest) ){
		$result = '1|'.filename($backup_name, 'decode');
	}else{
		$result = '0|could not copy '.$source.' to '.$dest;
	}
}

// choose previous backup
if( isset($_GET['choose_backup']) && !empty($_GET['choose_backup']) ){
	$choose_backup = urldecode($_GET['choose_backup']);
	$source = ROOT.CONTENT.'~backup/'.$choose_backup;
	$dest = ROOT.CONTENT.'styles_custom.php';
	if( copy($source, $dest) ){
		$result = '1|sucess';
	}else{
		$result = '0|could not copy '.$source.' to '.$dest;
	}
}

// rotate image
if( isset($_GET['rotateImage']) ){
	$img_name = preg_replace('/\?.*$/', '', basename( urldecode($_GET['image']) ) );
	$o = $_GET['orientation'];

	$xl = ROOT.CONTENT.UPLOADS.'_XL/'.$img_name;
	// debug
	//$result = '<p>'.$path_to_img.' '.$orientation.'</p>';
	$rot = fix_image_orientation($xl, $o);
	
	if($rot === true){
		// resize xl img (se we get correct size, because )
		resize_all($xl);
		$rand = rand(1,999);
		$result = '1|/'.CONTENT.UPLOADS.'_S/'.$img_name.'?v='.$rand;
	}else{
		$result = '0|'.$do;
	}
	//$result = 'YEAH';
}

//addFileFromUploads
if( isset($_GET['addFileFromUploads']) ){
	$url = urldecode($_GET['url']);
	$path = urldecode($_GET['path']);
	$replace = urldecode($_GET['replace']);
	$context = $_GET['context'];
	$result = '';
	// detect last file to add (could be looping through an array of files)
	if( isset($_GET['end']) && $_GET['end'] == 'end'){
		$result .= '|done|';
	}
	// detect galleries
	if($context == 'gallery'){
		$action = 'add';
		$file = $url;
		$position = '';
		if( $gallery_file = update_gallery_file($path, $action, $file, $position) ){
			$result .= 'success';
		}else{
			$result .= '<p class="error">Error: Could not update gallery file: '.$path.' with action: '.$action.' for file: '.$file.'</p>';
		}

	}elseif($context == 'home_bg_img'){
		$file_name = basename($url);
		$ext = file_extension($file_name);
		if( copy(ROOT.CONTENT.UPLOADS.'_S/'.$file_name, ROOT.CONTENT.UPLOADS.'_S/'.BG.$ext) && 
			copy(ROOT.CONTENT.UPLOADS.'_M/'.$file_name, ROOT.CONTENT.UPLOADS.'_M/'.BG.$ext) && 
			copy(ROOT.CONTENT.UPLOADS.'_L/'.$file_name, ROOT.CONTENT.UPLOADS.'_L/'.BG.$ext) &&
			copy(ROOT.CONTENT.UPLOADS.'_XL/'.$file_name, ROOT.CONTENT.UPLOADS.'_XL/'.BG.$ext) ){
				
			$result .= 'success';
		}
		if( isset($home_image) && file_extension($home_image) !== $ext ){
			unlink(ROOT.CONTENT.UPLOADS.'_S/'.$home_image); 
			unlink(ROOT.CONTENT.UPLOADS.'_M/'.$home_image);
			unlink(ROOT.CONTENT.UPLOADS.'_L/'.$home_image);
			unlink(ROOT.CONTENT.UPLOADS.'_XL/'.$home_image);
		}
		
	}else{
		$result .= update_menu_file('add', $path, basename($url));
	}
}


if( isset($result) ){
	echo $result;
}
